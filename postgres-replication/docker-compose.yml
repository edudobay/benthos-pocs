name: 'benthos-poc'

services:
  benthos-capture:
    image: jeffail/benthos
    volumes:
      - ./benthos-capture.yaml:/benthos.yaml
    env_file: ./local.env

  benthos-mock:
    image: jeffail/benthos
    volumes:
      - ./benthos-mock.yaml:/benthos.yaml
    env_file: ./local.env

  benthos-target:
    image: jeffail/benthos
    volumes:
      - ./benthos-target.yaml:/benthos.yaml
    env_file: ./local.env

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'
    # ports: [ '22181:2181' ]

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    # ports: [ '29092:29092' ]
    environment:
      KAFKA_BROKER_ID: '1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'

  kafka-ui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=demo-01
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  postgres:
    image: 'postgres:12-alpine'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: ./local.env
    environment:
      - POSTGRES_PASSWORD=demo
      - POSTGRES_USER=demo
      - POSTGRES_DB=dbsource

volumes:
  postgres_data:
